name: Deploy to EC2 from ECR

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon Private ECR
        run: |
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 051826725875.dkr.ecr.ap-south-1.amazonaws.com
      - name: Build and Push Frontend
        run: |
           docker build -t 051826725875.dkr.ecr.ap-south-1.amazonaws.com/frontend:latest ./frontend
           docker push 051826725875.dkr.ecr.ap-south-1.amazonaws.com/frontend:latest

      - name: Build and Push API
        run: |
           docker build -t 051826725875.dkr.ecr.ap-south-1.amazonaws.com/api:latest ./API
           docker push 051826725875.dkr.ecr.ap-south-1.amazonaws.com/api:latest

      - name: Build and Push DB
        run: |
           docker build -t 051826725875.dkr.ecr.ap-south-1.amazonaws.com/db:latest ./DB
           docker push 051826725875.dkr.ecr.ap-south-1.amazonaws.com/db:latest

      - name: Decode EC2 SSH Key
        run: echo "${{ secrets.EC2_KEY }}" | base64 -d > ec2-key.pem

      - name: SSH and Deploy on EC2
        run: |
          chmod 400 ec2-key.pem
          ssh -o StrictHostKeyChecking=no -i ec2-key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_IP }} << 'EOF'
            
            # Stop and remove existing containers
             docker stop frontend || true &&  docker rm frontend || true
             docker stop api_container || true &&  docker rm api_container || true
             docker stop db_container || true &&  docker rm db_container || true

            # Remove the old image
             docker image rm public.ecr.aws/l2o9a2s7/frontend:latest || true
             docker image rm public.ecr.aws/l2o9a2s7/api:latest || true
             docker image rm public.ecr.aws/l2o9a2s7/db:latest || true
            
            # Pull latest images
             docker pull 051826725875.dkr.ecr.ap-south-1.amazonaws.com/frontend:latest
             docker pull 051826725875.dkr.ecr.ap-south-1.amazonaws.com/api:latest
             docker pull 051826725875.dkr.ecr.ap-south-1.amazonaws.com/db:latest

            # Create network if not exists
             docker network inspect banking-network >/dev/null 2>&1 || sudo docker network create banking-network

            # Run DB container
             docker run -d --name db_container --network banking-network -e MYSQL_ROOT_PASSWORD=Neelbera@2330 -p 3307:3306 051826725875.dkr.ecr.ap-south-1.amazonaws.com/db:latest
            # Run API container
             docker run -d --name api_container --network banking-network -p 5000:5000 051826725875.dkr.ecr.ap-south-1.amazonaws.com/api:latest
            # Run Frontend container
             docker run -d --name frontend --network banking-network -p 80:5173 051826725875.dkr.ecr.ap-south-1.amazonaws.com/frontend:latest
          EOF

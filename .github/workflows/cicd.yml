name: Deploy to EC2 from ECR

on:
  push:
    branches: [main]  # Change branch if needed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to ECR
        run: |
          IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:latest"
          docker build -t $IMAGE_URI -f ./frontend
          docker push $IMAGE_URI

      - name: Check if EC2_IP secret exists
        id: check-ec2-ip
        run: |
          if [ -z "${{ secrets.EC2_IP }}" ]; then
            echo "EC2_IP not set"
            echo "ec2_ip_exists=false" >> $GITHUB_OUTPUT
          else
            echo "EC2_IP is set"
            echo "ec2_ip_exists=true" >> $GITHUB_OUTPUT
          fi

      - name: Decode EC2 key
        if: steps.check-ec2-ip.outputs.ec2_ip_exists == 'true'
        run: echo "${{ secrets.EC2_KEY }}" | base64 -d > ec2-key.pem

      - name: SSH into EC2 and deploy container
        if: steps.check-ec2-ip.outputs.ec2_ip_exists == 'true'
        run: |
          chmod 400 ec2-key.pem
          ssh -o StrictHostKeyChecking=no -i ec2-key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_IP }} << 'EOF'
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}
            docker stop frontend || true
            docker rm frontend || true
            docker pull ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:latest
            docker run -d --name frontend --network banking-network -p 80:5173 ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:latest
          EOF
